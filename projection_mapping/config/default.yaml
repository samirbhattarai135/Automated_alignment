# Default configuration for projector mapping pipeline
# Copy and customize per deployment environment.

project:
  name: demo-installation
  data_root: data

logging:
  level: INFO
  output: stdout

hardware:
  camera:
    device_id: 0
    resolution: [1920, 1080]
    fps: 30
  projectors:
    - id: projector_1
      display_id: 1
      resolution: [1920, 1080]
      overlay_color_lower_hsv: [0, 120, 70]
      overlay_color_upper_hsv: [10, 255, 255]
      overlay_color_bgr: [0, 0, 255]
    - id: projector_2
      display_id: 2
      resolution: [1920, 1080]
      overlay_color_lower_hsv: [35, 80, 80]
      overlay_color_upper_hsv: [85, 255, 255]
      overlay_color_bgr: [0, 255, 0]

pipeline:
  detection:
    backend: fal_evfsam
    classes: [window, door, house]
    confidence_threshold: 0.3
    api:
      endpoint: https://detect.roboflow.com/YOUR_MODEL/42
      api_key_env: ROBOFLOW_API_KEY
    evfsam:
      model_id: fal-ai/evf-sam
      api_key_env: FALAI_API_KEY
      prompt_map:
        window: "glass window pane"
        door: "entrance door"
        house: "entire house facade"

      mask_only: true
      fill_holes: true
      revert_mask: false
      poll_interval_s: 0.5
      timeout_s: 20.0
  masking:
    dilate_kernel: 5
    blur_kernel: 5
  alignment:
    max_iterations: 5
    reprojection_tolerance_px: 4.0
    feedback_gain: 0.6
    min_overlay_contour_area: 500
    max_polygon_points: 8

calibration:
  pattern:
    type: checkerboard
    inner_corners: [9, 6]
    square_size_m: 0.025
  camera_intrinsics_path: data/calibration/camera_intrinsics.json
  projector_intrinsics_dir: data/calibration/projectors
  homographies_dir: data/calibration/homographies

storage:
  frames_dir: data/frames
  masks_dir: data/masks
  logs_dir: data/logs
